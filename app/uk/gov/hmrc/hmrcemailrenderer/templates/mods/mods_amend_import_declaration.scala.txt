@(params: Map[String, Any])You added goods to your declaration
@goodsGrid = @{
  val goods = Stream.from(0).takeWhile(i => params.get(s"goodsCategory_$i").isDefined).toList
  goods.map { i =>
    val category = params(s"goodsCategory_$i")
    val quantity = params(s"goodsQuantity_$i")
    val country = params.get(s"goodsCountry_$i")
    val producedInEu = params.get(s"goodsProducedInEu_$i")
    val price = params(s"goodsPrice_$i")
      (category, quantity, country, producedInEu, price)
  }
}
Dear @params("nameOfPersonCarryingGoods")

This is your updated declaration for all the goods you are bringing into Great Britain in your baggage or small vehicle.

Your declaration reference is: @params("declarationReference")

What you need to do next

When you arrive in Great Britain, go to the green ‘nothing to declare’ channel.

Make sure you take this updated declaration and the purchase receipts for the goods with you. You may be asked to provide these on your arrival.

Bringing EU goods

You need to carry proof your goods were made in the EU if they have a total value over £1,000.

Date of declaration

@{params("dateOfDeclaration") + "." }

Details of the goods

@for((category, quantity, country, producedInEu, price) <- goodsGrid) {
Type of goods: @category
Quantity: @quantity
@for(cntry <- country) {Country: @cntry  }
@for(eu <- producedInEu) {Made in EU: @eu  }
Amount paid: @price

}

@if(params("total").toString().substring(1).toDouble > 0) {
Payment summary

Customs Duty: @params("customsDuty")
VAT: @params("vat")
Total: @params("total")
}

Personal details

Name of person carrying goods: @params("nameOfPersonCarryingGoods")
EORI number: @params("eori")

Changing your declaration

If you bring goods that you have not declared in advance, you must go to the ‘Goods to Declare’ channel or the red point phone in the customs area, if there is one.

If you need a refund, go to ‘Declare commercial goods you’re bringing into Great Britain in accompanied baggage or small vehicles’ on GOV.UK.

From the Commercial goods declaration service

@{uk.gov.hmrc.hmrcemailrenderer.templates.helpers.txt.template_footer()}