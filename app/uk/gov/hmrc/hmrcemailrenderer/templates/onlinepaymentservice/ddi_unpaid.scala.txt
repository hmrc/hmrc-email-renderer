@(params: Map[String, Any])

@formatDate(yyyymmdd: String) = @{
  val year = yyyymmdd.slice(2,4)
  val month = yyyymmdd.slice(4,6)
  val day = yyyymmdd.slice(6,8)
  s"$day/$month/$year"
}

Direct debit payment for VAT has not been collected

Customer name @params("NAME")
Direct debit reference @params("DDIREFERENCE")

@{
  lazy val reason = params("REASON") match {
    case "0" => ""
    case "1" => "the Direct Debit instruction has been cancelled"
    case "3" => "your account has been transferred to a new bank/building society"
    case "5" => "they do not recognise the account number"
    case "6" => "they do not hold an active Direct Debit instruction"
    case "B" => "the account has been closed"
  }

  if (params("REASON") == "0") {
    s"Our request for payment of ${params("AMOUNT")} on ${formatDate(params("COLLECTIONDATE").toString)} has been returned by your bank marked 'refer to payer'.\n" +
    s"We will not try to collect this payment again. You need to arrange to make payment by another method immediately (unless you have already paid).\n" +
    s"Your direct debit instruction has not been cancelled, so we will continue to collect future payments.\n"
  } else {
    s"Our request for payment of ${params("AMOUNT")} on ${formatDate(params("COLLECTIONDATE").toString)} has been rejected by your bank. This is because $reason.\n" +
    s"You need to arrange to make payment by another method immediately.\n" +
    s"If you want to make payments in the future by direct debit, you need to set up a new instruction.\n"
  }
}

From HMRC direct debit team
